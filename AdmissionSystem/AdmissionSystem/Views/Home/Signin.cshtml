@model AdmissionSystem.Models.SigninModel

@{
    ViewBag.Title = "Signin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</head>
<body class="bg-light">

    <div class="container">
        <div class="row justify-content-center align-items-center vh-100">
            <div class="col-md-6">
                <h2 class="text-center">Signin</h2>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @id = "passwordInput" })
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i id="togglePassword" class="fas fa-eye" onclick="togglePasswordVisibility()"></i>
                                    </span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Signin" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                 }

                <div class="text-c">
                    @Html.ActionLink("Don't have an account? Signup", "Signup", "StudentRegister")
                </div>
                <div class="text-cente">
                    @Html.ActionLink("Forgot password?", "Signin")
                </div>
            </div>
        </div>
    </div>

    <script>
        function togglePasswordVisibility() {
            var passwordInput = document.getElementById('passwordInput');
            var toggleIcon = document.getElementById('togglePassword');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.className = 'fas fa-eye-slash'; // Change to an icon that represents hidden password
            } else {
                passwordInput.type = 'password';
                toggleIcon.className = 'fas fa-eye'; // Change to an icon that represents visible password
            }
        }
    </script>

</body>
</html>
