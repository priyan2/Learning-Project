@model AdmissionSystem.Models.Registrationstudent

@{
    ViewBag.Title = "Signup";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <style>
        .error-message{
            color: red;
        }
    </style>
</head>
<body>

    <div class="container">

        @using (Html.BeginForm())
         {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2>Signup</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control",id="first-name" }})
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        <span id="firstNameError" class="error-message"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", id = "last-name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        <span id="lastNameError" class="error-message"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="radio" id="male" name="gender" value="male">
                        <label for="male">Male</label>
                        <input type="radio" id="female" name="gender" value="female">
                        <label for="female">Female</label>
                        <input type="radio" id="others" name="gender" value="others">
                        <label for="others">Others</label>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DataOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date", id = "calender" } })
                        @Html.ValidationMessageFor(model => model.DataOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" , id = "email" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                        <span id="emailError" class="error-message"></span>
                    </div>
                </div>

                <div class="form-group">
                        @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownListFor(model => model.State, Model.StatesList, "Select State", new { @class = "form-control", id = "stateDropdown" })
                        @Html.ValidationMessageFor(model => model.State)*@
                        @Html.DropDownListFor(model => model.State, new SelectList(new List<SelectListItem>(), "Value", "Text"), "Select State", new { @class = "form-control", id = "stateDropdown" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                        @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownListFor(model => model.City, Model.CitiesList, "Select City", new { @class = "form-control", id = "cityDropdown" })
                        @Html.ValidationMessageFor(model => model.City)*@
                        @Html.DropDownListFor(model => model.City, new SelectList(new List<SelectListItem>(), "Value", "Text"), "Select City", new { @class = "form-control", id = "cityDropdown" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phonenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phonenumber, new { htmlAttributes = new { @class = "form-control", id="phone-number" } })
                        @Html.ValidationMessageFor(model => model.Phonenumber, "", new { @class = "text-danger" })
                        <span id="phoneNumberError" class="error-message"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" , id = "username"} })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" , id = "password"}) 
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <span id="passwordError" class="error-message"></span>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.ConfirmPassword, new {@class = "form-control" ,id="confirm-password" } )
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                        <span id="confirmPasswordError" class="error-message"></span>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Register" class="btn btn-primary" />
                    </div>
                </div>
            </div>
         }

        <div>
            @Html.ActionLink("Aleady have a account ? click here", "Signin")
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        
           $(document).ready(function () {
            var stateDropdown = $("#stateDropdown");
            var cityDropdown = $("#cityDropdown");
            $.ajax({
                url: "@Url.Action("GetStates", "StudentRegister")",
                type: "GET",
                dataType: "json",
                success: function (data) {

                    populateDropdown(stateDropdown, data);
                }
           });

    // Handle state dropdown change
    stateDropdown.change(function () {
        var selectedState = stateDropdown.val();
        if (selectedState) {
            $.ajax({
                url: "@Url.Action("GetCities", "StudentRegister")",
                type: "GET",
                dataType: "json",
                data: { state: selectedState },
                success: function (data) {
                populateDropdown(cityDropdown, data);
                }
            });
        } else {
            
            cityDropdown.empty();
        }
    });

    // Function to populate a dropdown with given data    
               function populateDropdown(dropdown, data) {
                   dropdown.empty();
                   dropdown.append($('<option>', {
                       value: "",
                       text: "Select"
                   }));
                   $.each(data, function (index, item) {
                       dropdown.append($('<option>', {
                           value: item,
                           text: item
                       }));
                   });
               }
           });

        //date validation
        const today = new Date().toISOString().split('T')[0];
        document.getElementById("calender").setAttribute("max", today);
        //email id and username same
        $(document).ready(function () {
            // Add an event listener for the email input field
            $("#email").on("input", function () {
                // Get the value of the email field
                var emailValue = $(this).val();

                // Set the value of the username field
                $("#username").val(emailValue);
            });
        });

    </script>
</body>
</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Validation/signupValidation.js")
}



